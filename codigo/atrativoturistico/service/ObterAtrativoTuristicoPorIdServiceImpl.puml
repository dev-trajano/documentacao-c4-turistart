@startuml
!define C4_COMPONENT
!include <C4/C4_Component.puml>

Container(app, "inovaturpb-api", "Aplicação Spring Boot")

' Serviço principal
Component(service, "ObterAtrativoTuristicoPorIdServiceImpl", "Serviço de Obtenção de Atrativo Turístico por ID", "Busca um atrativo turístico específico com base no ID fornecido")

' Repositórios e Componentes Auxiliares
Component(repository, "AtrativoTuristicoRepository", "Repositório de Atrativos Turísticos", "Interface para operações no banco de dados de atrativos turísticos")
Component(util, "ConversorAtrativoTuristicoUtil", "Utilitário", "Converte entidades de atrativos turísticos para DTOs")
Component(dtoOut, "AtrativoTuristicoDTO", "DTO de Saída", "Representa o atrativo turístico retornado ao cliente")
Component(exception, "NaoEncontradoException", "Exceção", "Lançada quando o atrativo turístico não é encontrado")

' Método principal
Component(method, "obterAtrativoTuristicoPorId", "Método", "Busca um atrativo turístico pelo ID e converte a entidade retornada para DTO")

' Fluxos Alternativos e Erros
Component(errorFlow, "Fluxo de Erro", "Fluxo", "Lida com casos em que o atrativo turístico não é encontrado")

' Relacionamentos
Rel(service, method, "Define", "Gerencia lógica de obtenção de atrativo por ID")
Rel(method, repository, "Usa", "Consulta o banco de dados para buscar o atrativo pelo ID")
Rel(method, util, "Usa", "Converte a entidade retornada para DTO")
Rel(method, dtoOut, "Retorna", "Atrativo turístico encontrado")
Rel(method, exception, "Lança", "Erro caso o atrativo não seja encontrado")
Rel(method, errorFlow, "Chama", "Fluxo alternativo em caso de erro")

@enduml
